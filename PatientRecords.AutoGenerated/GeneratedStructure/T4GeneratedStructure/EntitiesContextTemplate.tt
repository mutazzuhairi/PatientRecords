<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="PatientRecords.AutoGenerated.HelperClasses" #>
<#@ output extension=".cs" #>
using PatientRecords.DataLayer.Data.Entities;
using PatientRecords.DataLayer.Data.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using PatientRecords.DataLayer.DataUtilities.Extensions;

namespace <#= NameSpace #>
{
 
    public sealed class <#= ContextName #> : IdentityDbContext<User>
    {
        
        public <#= ContextName #> (DbContextOptions<<#= ContextName #>> options) : base(options)
        {

            this.ChangeTracker.LazyLoadingEnabled = false;
            this.ChangeTracker.AutoDetectChangesEnabled = false;
            this.ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking;

        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.AddRestrictToRelationshipOnDelete();
            <# foreach (Type type in Entities) { #>
modelBuilder.ApplyConfiguration(new  <#= type.Name #><#= EntityConfigurationConvention #>());
            <# } #>
base.OnModelCreating(modelBuilder);
        } 

       <# foreach (Type type in Entities) { #>
 public DbSet<<#= type.Name #>> <#= type.Name #>s { get; set; }
       <# } #>

    }
}


<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="PatientRecords.AutoGenerated.HelperClasses" #>
<#@ output extension=".cs" #>
using PatientRecords.BLLayer.BLUtilities.HelperServices.Interfaces;
using PatientRecords.BLLayer.EntityDTOs;
using PatientRecords.BLLayer.QueryServices.Interfaces;
using PatientRecords.BLLayer.Validating.Interfaces;
using System.Collections.Generic;
using System;

namespace <#= NameSpace #>
{
 
    public class <#= Table.Type.Name #>Validating : I<#= Table.Type.Name #>Validating
    { 
        private readonly Lazy<I<#= Table.Type.Name #>QueryService> _iEntityQueryService;
        private readonly Lazy<<#= Table.CommonServices.Name #>> _iCommonServices;
        private readonly Lazy<<#= Table.ServiceBuildException.Name #>> _iServiceBuildException;

        public <#= Table.Type.Name #>Validating(Lazy<I<#= Table.Type.Name #>QueryService> iEntityQueryService,
                                      Lazy<<#= Table.CommonServices.Name #>> iCommonServices,
                                      Lazy<<#= Table.ServiceBuildException.Name #>> iServiceBuildException)
        {

            _iEntityQueryService = iEntityQueryService;
            _iCommonServices = iCommonServices;
            _iServiceBuildException = iServiceBuildException;

        }
        public void Validate(<#= Table.Type.Name #>DTO entityDTO, List<string> validationErrors, bool isNewEntity)
        {

        }
 
    }

}

<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="PatientRecords.AutoGenerated.HelperClasses" #>
<#@ output extension=".cs" #>
using PatientRecords.BLLayer.EntityDTOs;
using PatientRecords.Web.WebUtilities.Abstractions;
using PatientRecords.BLLayer.EntityViews;
using PatientRecords.BLLayer.QueryServices.Interfaces;
using PatientRecords.BLLayer.UpdateServices.Interfaces;
using PatientRecords.Web.WebUtilities.HelperServices.Interfaces;
using System;

namespace <#= NameSpace #>
{
 
    public class <#= Table.Type.Name #>Controller : CustomBaseController<<#= Table.Type.Name #>DTO, <#= Table.Type.Name #>View, I<#= Table.Type.Name #>UpdateService, I<#= Table.Type.Name #>QueryService>
    {
        private readonly Lazy<I<#= Table.Type.Name #>QueryService> _iEntityQueryService;
        private readonly Lazy<I<#= Table.Type.Name #>UpdateService> _iEntityUpdateService;
        private readonly Lazy<<#= Table.ApiExceptionBuilder.Name #>> _iApiExceptionBuilder;

        public <#= Table.Type.Name #>Controller(Lazy<I<#= Table.Type.Name #>QueryService> iEntityQueryService,
                                     Lazy<I<#= Table.Type.Name #>UpdateService> iEntityUpdateService,
                                     Lazy<<#= Table.ApiExceptionBuilder.Name #>> iApiExceptionBuilder) :
            base(iEntityQueryService, iEntityUpdateService, iApiExceptionBuilder)
        {

           _iEntityQueryService = iEntityQueryService;
           _iEntityUpdateService = iEntityUpdateService;
           _iApiExceptionBuilder = iApiExceptionBuilder;

        }


    }

}



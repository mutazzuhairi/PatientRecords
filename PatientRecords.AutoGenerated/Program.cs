using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Reflection;
using Microsoft.CSharp;
using Microsoft.VisualBasic.CompilerServices;
using PatientRecords.DataLayer.Data.Entities;

namespace PatientRecords.AutoGenerated
{
    class Program
    { 

        private static void Main()
        {

            Assembly asm = Assembly.Load("PatientRecords.DataLayer"); /* 1. does it matter if write myAssembly or myAssembly.dll? */
            var kk = asm.GetTypes();
            //Type t = asm.GetType("PatientRecords.DataLayer.Patient");
            foreach (Type type in asm.GetTypes().Where(s=>s.Namespace== "PatientRecords.DataLayer.Data.Entities"))
            {
                TableInfo tableInfo = new TableInfo()
                {
                    Type = type,
                    Properties = type.GetProperties().Where(s => s.DeclaringType.Name == type.Name).ToArray()

                };

                ITextTemplate template = new TableEntityTemplate("PatientRecords.BLLayer.EntityDTOs", tableInfo);
                string startupPath = Path.Combine(Directory.GetParent(System.IO.Directory.GetCurrentDirectory()).Parent.Parent.Parent.FullName, "PatientRecords.AutoGenerated", "Generated", type.Name+ "DTO.Generated.cs");
                System.IO.File.WriteAllText(startupPath, template.TransformText().RemoveGarbageLinesFromString());

                Console.WriteLine(template.TransformText());
            }


        
        }
    }
}
